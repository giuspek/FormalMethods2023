MODULE main
VAR
  d1 : {left,middle,right}; -- smallest
  d2 : {left,middle,right};
  d3 : {left,middle,right};
  d4 : {left,middle,right};
  d5 : {left,middle,right}; -- largest
  move : 1..5; -- possible moves

DEFINE
  move_d1 := move=1;
  move_d2 := move=2;
  move_d3 := move=3;
  move_d4 := move=4;
  move_d5 := move=5;

  -- di is clear iff it can move to a different pole
  clear_d1 := TRUE;

  clear_d2 := d2!=d1;
  clear_d3 := d3!=d1 & d3!=d2;
  clear_d4 := d4!=d1 & d4!=d2 & d4!=d3;
  clear_d5 := d5!=d1 & d5!=d2 & d5!=d3 & d5!=d4;

-- initially all items are on the left pole
INIT
  d1 = left &
  d2 = left &
  d3 = left &
  d4 = left &
  d5 = left & move = 1;

TRANS
	(next(clear_d3) = FALSE) -> (next(move) != 3)

TRANS
	(next(clear_d2) = FALSE) -> (next(move) != 2)

TRANS
	(next(clear_d1) = FALSE) -> (next(move) != 1)

TRANS
	(next(clear_d4) = FALSE) -> (next(move) != 4)

TRANS
	(next(clear_d5) = FALSE) -> (next(move) != 5)

TRANS
  move_d1 ->
	next(d1) != d1 &
	next(d2) = d2 &
	next(d3) = d3 &
	next(d4) = d4 &
	next(d5) = d5

TRANS
  move_d2 ->
	next(d1) = d1 &
	next(d2) != d2 &
	next(d3) = d3 &
	next(d4) = d4 &
	next(d5) = d5 &
	next(d2) != d1

TRANS
  move_d3 ->
	next(d1) = d1 &
	next(d2) = d2 &
	next(d3) != d3 &
	next(d4) = d4 &
	next(d5) = d5 &
	next(d3) != d1 &
	next(d3) != d2

TRANS
  move_d4 ->
	next(d1) = d1 &
	next(d2) = d2 &
	next(d3) = d3 &
	next(d5) = d5 &
	next(d4) != d4 &
	next(d4) != d1 &
	next(d4) != d2 &
	next(d4) != d3

TRANS
  move_d5 ->
	next(d1) = d1 &
	next(d2) = d2 &
	next(d3) = d3 &
	next(d4) = d4 &
	next(d5) != d5 &
	next(d5) != d4 &
	next(d5) != d1 &
	next(d5) != d2 &
	next(d5) != d3

TRANS
	(next(clear_d1) & next(clear_d2) & next(clear_d3)) -> next(move) != 3
TRANS
	(next(clear_d1) & next(clear_d2) & next(clear_d4)) -> next(move) != 4
TRANS
	(next(clear_d1) & next(clear_d2) & next(clear_d5)) -> next(move) != 5
TRANS
	(next(clear_d1) & next(clear_d3) & next(clear_d4)) -> next(move) != 4
TRANS
	(next(clear_d1) & next(clear_d3) & next(clear_d5)) -> next(move) != 5
TRANS
	(next(clear_d1) & next(clear_d4) & next(clear_d5)) -> next(move) != 5
TRANS
	(next(clear_d2) & next(clear_d3) & next(clear_d4)) -> next(move) != 4
TRANS
	(next(clear_d2) & next(clear_d3) & next(clear_d5)) -> next(move) != 5
TRANS
	(next(clear_d2) & next(clear_d4) & next(clear_d5)) -> next(move) != 5
TRANS
	(next(clear_d3) & next(clear_d4) & next(clear_d5)) -> next(move) != 5



-- spec to find a solution to the problem
LTLSPEC
  ! F(d1=right & d2=right & d3=right & d4=right & d5=right)
